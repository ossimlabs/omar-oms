buildscript {
  repositories {
    mavenLocal()
    maven { url ossimMavenProxy }
  }
  dependencies {
    classpath "org.grails:grails-gradle-plugin:$grailsVersion"
    classpath "com.bertramlabs.plugins:asset-pipeline-gradle:2.14.10"
    classpath 'io.ossim:gradleDefaults:1.5-SNAPSHOT'
  }
}

plugins {
    id "com.github.ben-manes.versions" version "0.17.0"
    id "org.sonarqube" version "2.6.2"
}

apply plugin: "eclipse"
apply plugin: "idea"
apply plugin: "org.grails.grails-plugin"
apply plugin: "org.grails.grails-plugin-publish"
apply plugin: "org.grails.grails-gsp"
apply plugin: "asset-pipeline"

apply plugin: "java"
apply plugin: "maven-publish"

repositories {
  mavenLocal()
  maven { url ossimMavenProxy }
}

sourceSets.main.output.classesDir = 'build/classes/groovy/main'
io.ossim.gradleDefaults.Variables.setAdditionalVariables(project)
io.ossim.gradleDefaults.Variables.setVersionVariables(project)
version "${buildVersion}-${buildVersionTag}"
jarDestination = "${projectDir}/build/libs/${project.name}-${version}.jar"
io.ossim.gradleDefaults.Publications.addPublication(project, groupName, name, "${buildVersion}-${buildVersionTag}")
io.ossim.gradleDefaults.Publications.addRepository(project, mavenPublishUrl, mavenRepoUsername, mavenRepoPassword)

 dependencyManagement {
   imports {
     mavenBom "org.springframework.cloud:spring-cloud-starter-parent:${springCloudDependencyV}"
   }
   applyMavenExclusions false
 }

 if ( System.getenv('O2_INLINE_BUILD') ) {
   grails {
     plugins {
      compile project(":omar-core-plugin")
//      compile project(":omar-openlayers-plugin")
     }
   }
 }

dependencies {
  if ( ! System.getenv('O2_INLINE_BUILD') ) {
  compile "io.ossim.omar.plugins:omar-core-plugin:${latestGradleIdentifier}"
  compile "io.ossim.omar.plugins:omar-openlayers-plugin:${latestGradleIdentifier}"
  }

  compile "io.swagger:swagger-annotations:1.5.15"
  compile "io.swagger:swagger-models:1.5.15"
  compile "org.grails.plugins:actuator-ui:1.1"

  compile "javax.media:jai_core:1.1.3"
  compile "javax.media:jai_codec:1.1.3"
  compile "javax.media:jai_imageio:1.1"
  compile "commons-pool:commons-pool:1.6"
  compile "org.ossim:joms:1.9.0-${buildVersionTag}"
  compile "org.grails:grails-core"
  compile "org.grails:grails-web-boot"
  compile "org.grails:grails-logging"
  compile "org.grails:grails-plugin-rest"
  compile "org.grails:grails-plugin-databinding"
  compile "org.grails:grails-plugin-i18n"
  compile "org.grails:grails-plugin-services"
  compile "org.grails:grails-plugin-url-mappings"
  compile "org.grails:grails-plugin-interceptors"
  compile "org.springframework.boot:spring-boot-starter-web"
  compile "org.springframework.boot:spring-boot-starter-logging"
  compile "org.springframework.boot:spring-boot-autoconfigure"
  compile "org.springframework.boot:spring-boot-starter-actuator"
  compile "org.springframework.boot:spring-boot-starter-tomcat"
  //compile "org.springframework.cloud:spring-cloud-starter-zipkin"
  compile "org.grails.plugins:cache"
  compile "org.grails.plugins:async"
  compile "org.grails.plugins:scaffolding"
  compile "org.grails.plugins:gsp"
  console "org.grails:grails-console"
  profile "org.grails.profiles:web-plugin"
  provided "org.grails:grails-plugin-services"
  provided "org.grails:grails-plugin-domain-class"
  runtime "com.bertramlabs.plugins:asset-pipeline-grails:${assetPipelineGrailsV}"
  testCompile "org.grails:grails-gorm-testing-support"
  testCompile "org.grails:grails-plugin-testing"
  testCompile "org.grails.plugins:geb"
  testCompile "org.grails:grails-web-testing-support:3.2.7"
  testRuntime "org.seleniumhq.selenium:selenium-htmlunit-driver:${seleniumHtmlUnitDriverV}"
  testRuntime "net.sourceforge.htmlunit:htmlunit:${htmlUnitV}"
  testCompile "org.grails:grails-test-mixins:3.3.0"

}

assets {
  packagePlugin = true
}
